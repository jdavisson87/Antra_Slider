@use "../../scss/variable";
@use "../../scss/mixin";
$color-map: (
  primary: (
    normal: variable.$primary-color,
    track: variable.$primary-color-track,
    hover: variable.$primary-color-hover,
    hover-light: variable.$primary-color-hover-light,
  ),
  secondary: (
    normal: variable.$secondary-color,
    track: variable.$secondary-color-track,
    hover: variable.$secondary-color-hover,
    hover-light: variable.$secondary-color-hover-light,
  ),
  default: (
    normal: variable.$default-color,
    track: variable.$default-color-track,
    hover: variable.$default-color-hover,
    hover-light: variable.$default-color-hover-light,
  ),
);

@mixin color-classes($color) {
  .slider-#{$color} {
    .slider-rail {
      display: block;
      position: absolute;
      border-radius: inherit;
      background-color: map-get(map-get($color-map, $color), 'normal');
      opacity: 0.38;
      width: 100%;
      height: inherit;
      top: 50%;
      transform: translateY(-50%);
    }

    .slider-track {
      display: block;
      position: absolute;
      border-radius: inherit;
      border: 1px solid currentcolor;
      background-color: map-get(map-get($color-map, $color), 'track');
      transition: left 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
        width 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
        bottom 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
        height 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      height: inherit;
      top: 50%;
      transform: translateY(-50%);
    }

    .slider-thumb {
      position: absolute;
      width: 20px;
      height: 20px;
      box-sizing: border-box;
      border-radius: 50%;
      outline: 0px;
      background-color: map-get(map-get($color-map, $color), 'normal');
      display: flex;
      -webkit-box-align: center;
      align-items: center;
      -webkit-box-pack: center;
      justify-content: center;
      transition: box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
        left 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
        bottom 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }

  .slider-valueLabel-ctr-#{$color} {
    display: flex;
    position: absolute;
    top: -40px;
    justify-content: center;
    align-items: center;
    width: 32px;
    height: 32px;
    background: map-get(map-get($color-map, $color), 'normal');
    border-radius: 50% 50% 0% 50%;
    transform: rotate(0.125turn);
  }
}

$colors: ('primary', 'secondary', 'default');

@mixin generate-color-classes {
  @each $color in ('primary', 'secondary', 'default') {
    @include color-classes($color);
  }
}

@include generate-color-classes();

// CSS

.slider-container {
  border-radius: 12px;
  box-sizing: content-box;
  display: inline-block;
  position: relative;
  cursor: pointer;
  touch-action: none;
  -webkit-tap-highlight-color: transparent;
  height: 4px;
  width: 100%;
  padding: 13px 0px;
}

.slider-thumb {
  & div {
    display: none;
  }

  &:hover {
    div {
      display: flex;
    }
  }
}

.slider-valueLabel {
  color: white;
  transform: rotate(-0.125turn);
}

.thumb-ctr {
  width: 100%;
}
