@use "../../scss/variable";
@use "../../scss/mixin";

$color-map: (
  primary: (
    normal: variable.$primary-color,
    hover: variable.$primary-color-hover,
    hover-light: variable.$primary-color-hover-light,
  ),
  secondary: (
    normal: variable.$secondary-color,
    hover: variable.$secondary-color-hover,
    hover-light: variable.$secondary-color-hover-light,
  ),
  default: (
    normal: variable.$default-color,
    hover: variable.$default-color-hover,
    hover-light: variable.$default-color-hover-light,
  ),
);

@mixin color-variant-classes($color, $variant) {
  .slider-#{$color}-#{$variant} {
    @if $variant == 'circle' {
      // color: green;
    } @else if $variant == 'square' {
      background: none;
      color: map-get(map-get($color-map, $color), 'normal');
      border: 1px
        solid
        rgba(map-get(map-get($color-map, $color), 'normal'), 0.5);
    } @else {
      background: none;
      border: none;
      color: map-get(map-get($color-map, $color), 'normal');
    }
  }
  .slider-default-#{$variant} {
    color: black;
  }
}

input[type='range'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  &:focus {
    outline: none;
  }
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
  }
  &::-moz-range-thumb {
    border: none;
  }
}

@mixin track() {
  background: yellow;
}

@mixin thumb() {
  position: relative;
  top: -50%;
  width: 40px;
  height: 40px;
  background-color: green;
  background-image: linear-gradient(-45deg, rgba(white, 0.8), transparent);
  border-radius: 0%;
  box-shadow: -1px -1px 2px white, 1px 1px 2px rgba(black, 0.3);
  &:hover {
    cursor: pointer;
  }
}

input {
  &::-webkit-slider-runnable-track {
    @include track;
  }
  &::-moz-range-track {
    @include track;
  }
  &::-ms-track {
    @include track;
  }
  &::-webkit-slider-thumb {
    @include thumb;
  }
  &::-moz-range-thumb {
    @include thumb;
  }
}

$colors: ('primary', 'secondary', 'default');
$variants: ('circle', 'square', 'logo');

@mixin generate-color-variant-classes {
  @each $variant in $variants {
    @each $color in $colors {
      @include color-variant-classes($color, $variant);
    }
  }
}

@include generate-color-variant-classes();
